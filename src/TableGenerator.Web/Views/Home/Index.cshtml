@{
    ViewData["Title"] = "Table Generator";
}

<div class="container mt-5">
    <h1 class="display-4 text-center mb-5">Personal Data</h1>

    <div class="row mb-3">
        <div class="col">
            <button id="btnGenerate" class="btn btn-primary">
                <i class="fas fa-magic"></i> Generate 1000 Data
            </button>
            <button id="btnReset" class="btn btn-warning">
                <i class="fas fa-sync-alt"></i> Reset Table
            </button>
            <button id="btnSubmit" class="btn btn-success" disabled>
                <i class="fas fa-paper-plane"></i> Submit Data
            </button>
        </div>
    </div>

    <div class="table-responsive">
        <table id="dataTable" class="table table-bordered table-striped">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Name</th>
                    <th scope="col">Gender</th>
                    <th scope="col">Hobby</th>
                    <th scope="col">Age</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>

</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const NUMBER_OF_ROWS = 1000;

            let isDataGenerated = false;

            function generateRandomString(length) {
                const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
                let result = '';

                for (let i = 0; i < length; i++) {
                    result += chars.charAt(Math.floor(Math.random() * chars.length));
                }

                return result;
            }

            function showAlert(title, text, icon) {
                Swal.fire({
                    title: title,
                    text: text,
                    icon: icon ?? 'info', // 'success', 'error', 'warning', 'info', 'question'
                    confirmButtonText: 'OK'
                });
            }

            function showInfo(text) {
                showAlert('Info', text, 'info');
            }

            function showError(text) {
                showAlert('Error Occured', text, 'error');
            }

            function showSuccess(text) {
                showAlert('Success', text, 'success');
            }

            $('#btnGenerate').on('click', function () {
                const $tbody = $('#dataTable tbody');
                let rowsData = [];

                $tbody.empty();

                for (let i = 1; i <= NUMBER_OF_ROWS; i++) {
                    const id = i;

                    let name = generateRandomString(7);

                    const gender = GENDERS[Math.floor(Math.random() * GENDERS.length)];
                    const hobby = HOBBIES[Math.floor(Math.random() * HOBBIES.length)];
                    const age = Math.floor(Math.random() * (40 - 18 + 1)) + 18;

                    rowsData.push({
                        Id: id,
                        Name: name,
                        Gender: gender,
                        Hobby: hobby,
                        Age: age
                    });

                    $tbody.append(`
                        <tr>
                            <td>${id}</td>
                            <td>${name}</td>
                            <td>${gender}</td>
                            <td>${hobby}</td>
                            <td>${age}</td>
                        </tr>
                    `);
                }

                $tbody.data('submissionData', rowsData);
                isDataGenerated = true;

                $('#btnSubmit').prop('disabled', false);
            });

            $('#btnReset').on('click', function () {
                $('#dataTable tbody').empty();
                $('#dataTable tbody').removeData('submissionData');
                $('#btnSubmit').prop('disabled', true);

                isDataGenerated = false;

                showAlert('Reset Data', 'Tabel telah direset.');
            });

            $('#btnSubmit').on('click', function () {
                if (!isDataGenerated) {
                    showInfo('Silakan generate data terlebih dahulu.');
                    return;
                }

                const dataToSubmit = $('#dataTable tbody').data('submissionData');
                if (!dataToSubmit || dataToSubmit.length === 0) {
                    showAlert('Data Tidak Valid', 'Tidak ada data untuk dikirim.', 'warning');
                    return;
                }

                $('#btnSubmit').prop('disabled', true).html('<span class="spinner-border spinner-border-sm"></span> Submitting...');

                $.ajax({
                    url: '@Url.Action("Submit", "Home")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(dataToSubmit),
                    success: function (response) {
                        showSuccess(`Berhasil submit data`);
                        $('#btnSubmit').prop('disabled', false).html('<i class="fas fa-paper-plane"></i> Submit Data');
                    },
                    error: function (xhr) {
                        let errorMessage = 'Terjadi kesalahan pada server.';
                        try {
                            const errorJson = JSON.parse(xhr.responseText);
                            errorMessage = errorJson.message || errorMessage;
                        } catch (e) {
                            errorMessage = xhr.responseText.substring(0, 200) + '...';
                        }

                        showError(`Failure. ${errorMessage}`);
                        $('#btnSubmit').prop('disabled', false).html('<i class="fas fa-paper-plane"></i> Submit Data');
                    }
                });
            });
        });
    </script>
}